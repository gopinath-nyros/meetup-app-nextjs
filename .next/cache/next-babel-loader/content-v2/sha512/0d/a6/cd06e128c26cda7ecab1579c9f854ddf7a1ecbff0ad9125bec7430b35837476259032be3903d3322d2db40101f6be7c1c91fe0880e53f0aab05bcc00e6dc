{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Nyros\\\\max-millian-react-course\\\\new-version\\\\section-23-intro-to-nextjs\\\\meetups\\\\pages\\\\[meetupsId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n} // get static paths\n\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://gopinath:YZQYcWzQew6i7u7@cluster0.9593i.mongodb.net/meetups\", {\n    useUnifiedTopology: true\n  });\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); // close connection\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupsId: meetup._id.toString()\n      }\n    })) // paths: [\n    //   {\n    //     params: {\n    //       meetupsId: \"m1\",\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupsId: \"m2\",\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data for single meetup\n  const meetupId = context.params.meetupsId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: \"https://images.unsplash.com/photo-1517713982677-4b66332f98de?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\n        title: \"First Meetup\",\n        address: \"some address.\",\n        description: \"The first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/Nyros/max-millian-react-course/new-version/section-23-intro-to-nextjs/meetups/pages/[meetupsId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","useUnifiedTopology","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupsId","toString","getStaticProps","context","meetupId","console","log","id"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,2EADmB,EAEnB;AAAEC,IAAAA,kBAAkB,EAAE;AAAtB,GAFmB,CAArB;AAKA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB,CATqC,CAWrC;;AACAT,EAAAA,MAAM,CAACU,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,SAAS,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAb;AADsB,KAAb,CAAZ,CAFF,CAKL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhBK,GAAP;AAkBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMC,QAAQ,GAAGD,OAAO,CAACJ,MAAR,CAAeC,SAAhC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAO;AACL3B,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV6B,QAAAA,EAAE,EAAEH,QADM;AAEVzB,QAAAA,KAAK,EACH,+JAHQ;AAIVC,QAAAA,KAAK,EAAE,cAJG;AAKVC,QAAAA,OAAO,EAAE,eALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAeN,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nimport { MongoClient } from \"mongodb\";\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\n// get static paths\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://gopinath:YZQYcWzQew6i7u7@cluster0.9593i.mongodb.net/meetups\",\r\n    { useUnifiedTopology: true }\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  // close connection\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupsId: meetup._id.toString() },\r\n    })),\r\n    // paths: [\r\n    //   {\r\n    //     params: {\r\n    //       meetupsId: \"m1\",\r\n    //     },\r\n    //   },\r\n    //   {\r\n    //     params: {\r\n    //       meetupsId: \"m2\",\r\n    //     },\r\n    //   },\r\n    // ],\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data for single meetup\r\n\r\n  const meetupId = context.params.meetupsId;\r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        image:\r\n          \"https://images.unsplash.com/photo-1517713982677-4b66332f98de?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\",\r\n        title: \"First Meetup\",\r\n        address: \"some address.\",\r\n        description: \"The first meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}