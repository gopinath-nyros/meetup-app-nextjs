{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Nyros\\\\max-millian-react-course\\\\new-version\\\\section-23-intro-to-nextjs\\\\meetups\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n} // special function\n\n\nexport async function getStaticProps() {\n  //  fetch data from api\n  const client = await MongoClient.connect(\"mongodb+srv://gopinath:YZQYcWzQew6i7u7@cluster0.9593i.mongodb.net/meetups\", {\n    useUnifiedTopology: true\n  });\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address\n      }))\n    },\n    revalidate: 1\n  };\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   //  fetch data from api\n//   return {\n//     props: {\n//       meetups: MEETUPS_ARR_LIST,\n//     },\n//   };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["E:/Nyros/max-millian-react-course/new-version/section-23-intro-to-nextjs/meetups/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","useUnifiedTopology","db","meetupsCollection","collection","find","toArray","map","meetup","id","_id","toString","title","image","address","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,2EADmB,EAEnB;AAAEC,IAAAA,kBAAkB,EAAE;AAAtB,GAFmB,CAArB;AAKA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMP,OAAO,GAAG,MAAMM,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,EAAE,EAAED,MAAM,CAACE,GAAP,CAAWC,QAAX,EAD4B;AAEhCC,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFkB;AAGhCC,QAAAA,KAAK,EAAEL,MAAM,CAACK,KAHkB;AAIhCC,QAAAA,OAAO,EAAEN,MAAM,CAACM;AAJgB,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,C,CAED;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAepB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nfunction HomePage(props) {\r\n  return <MeetupList meetups={props.meetups} />;\r\n}\r\n\r\n// special function\r\nexport async function getStaticProps() {\r\n  //  fetch data from api\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://gopinath:YZQYcWzQew6i7u7@cluster0.9593i.mongodb.net/meetups\",\r\n    { useUnifiedTopology: true }\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find().toArray();\r\n  return {\r\n    props: {\r\n      meetups: meetups.map((meetup) => ({\r\n        id: meetup._id.toString(),\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\n// export async function getServerSideProps(context) {\r\n//   const req = context.req;\r\n//   const res = context.res;\r\n\r\n//   //  fetch data from api\r\n//   return {\r\n//     props: {\r\n//       meetups: MEETUPS_ARR_LIST,\r\n//     },\r\n//   };\r\n// }\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}